{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/HDD - Veriler/projects/twitter-trends/pages/components/map.js\";\nimport { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapMarker from './MapMarker';\nimport TrendsBox from './TrendsBox';\nvar turkey = {\n  lat: 41.015137,\n  lng: 28.979530\n};\n\nconst Map = ({\n  eventData,\n  center,\n  zoom\n}) => {\n  const {\n    0: locationInfo,\n    1: setLocationInfo\n  } = useState({});\n  const {\n    0: trendsInfo,\n    1: setTrendsInfo\n  } = useState({});\n  const markers = eventData.map(item => {\n    var lat = parseFloat(item.lat);\n    var lng = parseFloat(item.long);\n    return /*#__PURE__*/_jsxDEV(MapMarker, {\n      lat: turkey.lat,\n      lng: turkey.lng,\n      onClick: () => setLocationInfo(item)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  });\n\n  function fetchClickedAreasTrends(e) {\n    var clickedPosition = {\n      lat: e.lat,\n      lng: e.lng\n    };\n    fetch(\"/api/closest\", {\n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(clickedPosition)\n    }).then(res => res.json()).then(function (res) {\n      const woeid = res[0].woeid;\n      fetchTrends(woeid);\n    });\n  }\n\n  async function fetchTrends(woeid) {\n    await fetch(\"/api/trends\", {\n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        woeid: woeid\n      })\n    }).then(res => res.json()).then(function (response) {\n      var trends = response[0];\n      setTrendsInfo(trends);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyBKcbWgVYRSdCv0PCn6dCOvgdV7MjcE-R0'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      onClick: e => fetchClickedAreasTrends(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), trendsInfo && /*#__PURE__*/_jsxDEV(TrendsBox, {\n      info: trendsInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756\n  },\n  zoom: 1\n};\nexport default Map;","map":{"version":3,"sources":["/Volumes/HDD - Veriler/projects/twitter-trends/pages/components/map.js"],"names":["useState","useEffect","GoogleMapReact","MapMarker","TrendsBox","turkey","lat","lng","Map","eventData","center","zoom","locationInfo","setLocationInfo","trendsInfo","setTrendsInfo","markers","map","item","parseFloat","long","fetchClickedAreasTrends","e","clickedPosition","fetch","method","headers","body","JSON","stringify","then","res","json","woeid","fetchTrends","response","trends","key","defaultProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport MapMarker from './MapMarker'\nimport TrendsBox from './TrendsBox'\n\nvar turkey = {\n    lat: 41.015137,\n    lng: 28.979530\n}\nconst Map = ({ eventData, center, zoom }) => {\n    const [locationInfo, setLocationInfo] = useState({});\n    const [trendsInfo, setTrendsInfo] = useState({});\n\n    const markers = eventData.map(item => {\n        var lat = parseFloat(item.lat);\n        var lng = parseFloat(item.long);\n        return <MapMarker lat={turkey.lat} lng={turkey.lng} onClick={() => setLocationInfo(item)} />\n    })\n\n\n    function fetchClickedAreasTrends(e) {\n        var clickedPosition = {\n            lat: e.lat,\n            lng: e.lng\n        }\n\n        fetch(\"/api/closest\", {\n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(clickedPosition)\n        })\n            .then(res => res.json())\n            .then(function (res) {\n                const woeid = res[0].woeid;\n                fetchTrends(woeid);\n            })\n    }\n\n    async function fetchTrends(woeid) {\n        await fetch(\"/api/trends\", {\n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                woeid: woeid\n            })\n        })\n            .then(res => res.json())\n            .then(function (response) {\n                var trends = response[0];\n                setTrendsInfo(trends);\n            });\n    }\n\n    return (\n        <div id=\"map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyBKcbWgVYRSdCv0PCn6dCOvgdV7MjcE-R0' }}\n                defaultCenter={center}\n                defaultZoom={zoom}\n                onClick={(e) => fetchClickedAreasTrends(e)}\n            >\n            </GoogleMapReact>\n            {trendsInfo && <TrendsBox info={trendsInfo} />}\n        </div>\n    )\n}\n\nMap.defaultProps = {\n    center: {\n        lat: 42.3265,\n        lng: -122.8756\n    },\n    zoom: 1\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}