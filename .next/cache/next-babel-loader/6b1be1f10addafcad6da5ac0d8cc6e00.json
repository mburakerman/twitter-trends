{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/HDD - Veriler/projects/twitter-trends/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/HDD - Veriler/projects/twitter-trends/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/HDD - Veriler/projects/twitter-trends/pages/components/map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapMarker from './MapMarker';\nimport TrendsBox from './TrendsBox';\nvar turkey = {\n  lat: 41.015137,\n  lng: 28.979530\n};\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var eventData = _ref.eventData,\n      center = _ref.center,\n      zoom = _ref.zoom;\n\n  var _useState = useState({}),\n      locationInfo = _useState[0],\n      setLocationInfo = _useState[1];\n\n  var _useState2 = useState({}),\n      trendsInfo = _useState2[0],\n      setTrendsInfo = _useState2[1];\n\n  var markers = eventData.map(function (item) {\n    var lat = parseFloat(item.lat);\n    var lng = parseFloat(item[\"long\"]);\n    return /*#__PURE__*/_jsxDEV(MapMarker, {\n      lat: turkey.lat,\n      lng: turkey.lng,\n      onClick: function onClick() {\n        return setLocationInfo(item);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, _this);\n  });\n  useEffect(function () {\n    // woeid 1 is wordlwide\n    fetchTrends(\"1\");\n  }, []);\n\n  function getClickedAreasWoeid(_x) {\n    return _getClickedAreasWoeid.apply(this, arguments);\n  }\n\n  function _getClickedAreasWoeid() {\n    _getClickedAreasWoeid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var clickedPosition;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              clickedPosition = {\n                lat: e.lat,\n                lng: e.lng\n              };\n              _context.next = 3;\n              return fetch(\"/api/closest\", {\n                method: \"post\",\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(clickedPosition)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                var woeid = res[0].woeid;\n                fetchTrends(woeid);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getClickedAreasWoeid.apply(this, arguments);\n  }\n\n  function fetchTrends(_x2) {\n    return _fetchTrends.apply(this, arguments);\n  }\n\n  function _fetchTrends() {\n    _fetchTrends = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(woeid) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"/api/trends\", {\n                method: \"post\",\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  woeid: woeid\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                var trends = response[0];\n                setTrendsInfo(trends);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchTrends.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyBKcbWgVYRSdCv0PCn6dCOvgdV7MjcE-R0'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      onClick: function onClick(e) {\n        return getClickedAreasWoeid(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this), trendsInfo && /*#__PURE__*/_jsxDEV(TrendsBox, {\n      info: trendsInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 28\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Map, \"3J/LQWE9UoTUIVqmFHnvV1/Qc/U=\");\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756\n  },\n  zoom: 1\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Volumes/HDD - Veriler/projects/twitter-trends/pages/components/map.js"],"names":["useState","useEffect","GoogleMapReact","MapMarker","TrendsBox","turkey","lat","lng","Map","eventData","center","zoom","locationInfo","setLocationInfo","trendsInfo","setTrendsInfo","markers","map","item","parseFloat","fetchTrends","getClickedAreasWoeid","e","clickedPosition","fetch","method","headers","body","JSON","stringify","then","res","json","woeid","response","trends","key","defaultProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport MapMarker from './MapMarker'\nimport TrendsBox from './TrendsBox'\n\nvar turkey = {\n    lat: 41.015137,\n    lng: 28.979530\n}\nconst Map = ({ eventData, center, zoom }) => {\n    const [locationInfo, setLocationInfo] = useState({});\n    const [trendsInfo, setTrendsInfo] = useState({});\n\n    const markers = eventData.map(item => {\n        var lat = parseFloat(item.lat);\n        var lng = parseFloat(item.long);\n        return <MapMarker lat={turkey.lat} lng={turkey.lng} onClick={() => setLocationInfo(item)} />\n    })\n\n    useEffect(() => {\n        // woeid 1 is wordlwide\n        fetchTrends(\"1\");\n    }, [])\n\n\n    async function getClickedAreasWoeid(e) {\n        var clickedPosition = {\n            lat: e.lat,\n            lng: e.lng\n        }\n\n        await fetch(\"/api/closest\", {\n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(clickedPosition)\n        })\n            .then(res => res.json())\n            .then(function (res) {\n                const woeid = res[0].woeid;\n                fetchTrends(woeid);\n            })\n    }\n    async function fetchTrends(woeid) {\n        await fetch(\"/api/trends\", {\n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                woeid: woeid\n            })\n        })\n            .then(res => res.json())\n            .then(function (response) {\n                var trends = response[0];\n                setTrendsInfo(trends);\n            });\n    }\n\n    return (\n        <div id=\"map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyBKcbWgVYRSdCv0PCn6dCOvgdV7MjcE-R0' }}\n                defaultCenter={center}\n                defaultZoom={zoom}\n                onClick={(e) => getClickedAreasWoeid(e)}\n            >\n            </GoogleMapReact>\n            {trendsInfo && <TrendsBox info={trendsInfo} />}\n        </div>\n    )\n}\n\nMap.defaultProps = {\n    center: {\n        lat: 42.3265,\n        lng: -122.8756\n    },\n    zoom: 1\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}